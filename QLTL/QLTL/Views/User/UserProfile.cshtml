@model QLTL.ViewModels.UserVM.UserProfileVM
@{
    ViewBag.Title = "Cập nhật thông tin cá nhân";
}

<div class="container mt-4">
    <h2 class="mb-3">Cập nhật thông tin cá nhân</h2>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    @using (Html.BeginForm("UserProfile", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.UserId)

        <div class="row">
            <div class="col-md-8">

                <!-- Mã nhân viên -->
                <div class="form-group mb-3">
                    @Html.Label("Mã nhân viên", new { @class = "form-label fw-bold" })
                    <input type="text" class="form-control" value="@Model.EmployeeCode" readonly />
                </div>

                <!-- Phòng ban -->
                <div class="form-group mb-3">
                    @Html.Label("Phòng ban", new { @class = "form-label fw-bold" })
                    <input type="text" class="form-control" value="@Model.DepartmentName" readonly />
                </div>

                <!-- Vai trò -->
                <div class="form-group mb-3">
                    @Html.Label("Vai trò", new { @class = "form-label fw-bold" })
                    <input type="text" class="form-control"
                           value="@(Model.RoleNames != null ? string.Join(", ", Model.RoleNames) : "Chưa có vai trò")" readonly />
                </div>

                <!-- Họ tên -->
                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.FullName, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                </div>

                <!-- Email -->
                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.Email, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <!-- Số điện thoại -->
                <div class="form-group mb-3">
                    @Html.LabelFor(m => m.Phone, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                </div>

                <!-- Mật khẩu -->
                <div class="form-group mb-3">
                    @Html.Label("Mật khẩu mới", new { @class = "form-label" })
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <!-- Xác nhận mật khẩu -->
                <div class="form-group mb-3">
                    @Html.Label("Xác nhận mật khẩu", new { @class = "form-label" })
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Avatar -->
            <div class="col-md-4 text-center">
                <div class="mb-3">
                    <img id="avatarPreview"
                         src="@(!string.IsNullOrEmpty(Model.AvatarUrl) ? Url.Content(Model.AvatarUrl) : Url.Content("~/Content/images/DefaultAvatar.jpg"))"
                         alt="Avatar" class="img-thumbnail mb-2" style="max-width: 200px;" />
                </div>

                <div class="form-group">
                    <label for="avatarFile" class="form-label">Ảnh đại diện mới</label>
                    <input type="file" name="avatarFile" id="avatarFile" class="form-control" accept="image/*" />
                </div>
            </div>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-save"></i> Lưu thay đổi
            </button>
            <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Hủy</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.getElementById("avatarFile").addEventListener("change", function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (ev) {
                    document.getElementById("avatarPreview").setAttribute("src", ev.target.result);
                };
                reader.readAsDataURL(file);
            }
        });
    </script>
}
