@model QLTL.ViewModels.UserVM.UserViewModel

@{
    ViewBag.Title = "Chỉnh sửa người dùng";
}

<div class="container mt-4">
    <div class="card shadow-lg rounded-3">
        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
            <h4 class="mb-0"><i class="bi bi-pencil-square me-2"></i>Chỉnh sửa người dùng</h4>
            <a href="@Url.Action("Index")" class="btn btn-light btn-sm">
                <i class="bi bi-arrow-left"></i> Quay lại
            </a>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "User", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.UserId)

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">@Html.LabelFor(m => m.Username)</label>
                        @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">@Html.LabelFor(m => m.FullName)</label>
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label">@Html.LabelFor(m => m.Email)</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6">
                        <label class="form-label">@Html.LabelFor(m => m.Password)</label>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Để trống nếu không đổi" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label"><i class="bi bi-building me-1"></i>Phòng ban</label>
                    @Html.DropDownListFor(m => m.DepartmentId,
                        new SelectList(ViewBag.Departments, "DepartmentId", "DepartmentName", Model.DepartmentId),
                        "-- Chọn phòng ban --",
                        new { @class = "form-select" })
                </div>

                <div class="mb-3">
                    <label class="form-label"><i class="bi bi-shield-lock me-1"></i>Phân quyền</label>
                    <select multiple="multiple" size="10" name="SelectedRoleIds" id="dualListbox" class="form-control">
                        @foreach (var role in ViewBag.Roles as List<QLTL.Models.Role>)
                        {
                            var selected = Model.SelectedRoleIds != null && Model.SelectedRoleIds.Contains(role.RoleId);
                            <option value="@role.RoleId" @(selected ? "selected" : "")>@role.RoleName</option>
                        }
                    </select>
                </div>

                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-success me-2">
                        <i class="bi bi-save"></i> Lưu
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="bi bi-x-circle"></i> Hủy
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('#dualListbox').bootstrapDualListbox({
                nonSelectedListLabel: 'Quyền khả dụng',
                selectedListLabel: 'Quyền đã có',
                preserveSelectionOnMove: 'moved',
                moveOnSelect: false,
                filterPlaceHolder: 'Tìm quyền...',
                infoText: 'Hiển thị {0}',
                infoTextEmpty: 'Không có quyền',
                infoTextFiltered: '<span class="badge bg-warning text-dark">Lọc</span> {0} từ {1}'
            });
        });
    </script>
}
