@model QLTL.ViewModels.UserVM.UserViewModel
@{
    ViewBag.Title = "Cập nhật người dùng";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">

            <div class="card shadow-sm rounded-3">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">Cập nhật người dùng</h4>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.UserId)

                        <!-- Username (readonly) -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Username, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @readonly = "readonly" })
                        </div>

                        <!-- FullName -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.FullName, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Nhập họ tên" })
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>

                        <!-- Email -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Email, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Nhập email" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>

                        <!-- Phone -->
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Phone, new { @class = "form-label fw-bold" })
                            @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = "Nhập số điện thoại" })
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>

                        <!-- Department -->
                        <div class="mb-3">
                            @Html.Label("Phòng ban", new { @class = "form-label fw-bold" })
                            @Html.DropDownListFor(
                                m => m.DepartmentId,
                                new SelectList(ViewBag.Departments, "DepartmentId", "DepartmentName", Model.DepartmentId),
                                "-- Chọn phòng ban --",
                                new { @class = "form-select" }
                            )
                            @Html.ValidationMessageFor(m => m.DepartmentId, "", new { @class = "text-danger" })
                        </div>

                        <!-- Roles -->
                        <div class="mb-3">
                            <label class="form-label fw-bold">Vai trò <span class="text-danger">*</span></label>
                            <div class="border rounded p-2" style="max-height:250px; overflow-y:auto;">
                                @foreach (var role in ViewBag.Roles as IEnumerable<QLTL.Models.Role>)
                                {
                                    <div class="form-check">
                                        <input type="checkbox"
                                               name="SelectedRoleIds"
                                               value="@role.RoleId"
                                               class="form-check-input"
                                               id="role_@role.RoleId"
                                               @(Model.SelectedRoleIds != null && Model.SelectedRoleIds.Contains(role.RoleId) ? "checked" : "") />
                                        <label class="form-check-label" for="role_@role.RoleId">
                                            @role.RoleName
                                            @if (!string.IsNullOrEmpty(role.Description))
                                            {
                                                <span class="text-muted"> - @role.Description</span>
                                            }
                                        </label>
                                    </div>
                                }
                            </div>
                            @Html.ValidationMessageFor(m => m.SelectedRoleIds, "", new { @class = "text-danger" })
                        </div>

                        <!-- Buttons -->
                        <div class="d-flex justify-content-between">
                            <a href="@Url.Action("Index", "User")" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Quay lại
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-save"></i> Cập nhật
                            </button>
                        </div>
                    }

                </div>
            </div>

        </div>
    </div>
</div>
