@model QLTL.ViewModels.DocumentVM.DocumentEditVM
@{
    ViewBag.Title = "Sửa tài liệu";
    var categories = ViewBag.Categories as List<QLTL.Models.Category> ?? new List<QLTL.Models.Category>();
    var docTypes = ViewBag.DocumentTypes as List<QLTL.Models.DocumentType> ?? new List<QLTL.Models.DocumentType>();
    var departments = ViewBag.Departments as List<QLTL.Models.Department> ?? new List<QLTL.Models.Department>();
}

<div class="container mt-4">
    <h2>Sửa tài liệu</h2>

    @using (Html.BeginForm("Edit", "Document", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.DocumentId)

        <div class="mb-3">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.Content)
            @Html.TextAreaFor(m => m.Content, new { @class = "form-control", rows = 5 })
            @Html.ValidationMessageFor(m => m.Content, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(m => m.CategoryId)
            @Html.DropDownListFor(m => m.CategoryId, new SelectList(categories, "CategoryId", "CategoryName", Model.CategoryId), "-- Chọn danh mục --", new { @class = "form-select" })
            @Html.ValidationMessageFor(m => m.CategoryId, "", new { @class = "text-danger" })
        </div>


        <div class="mb-3">
            @Html.LabelFor(m => m.DocumentTypeId)
            @Html.DropDownListFor(
                m => m.DocumentTypeId,
                new SelectList(ViewBag.DocumentTypes, "DocumentTypeId", "DocumentTypeName", Model.DocumentTypeId),
                "-- Chọn loại tài liệu --",
                new { @class = "form-select" }
            )
            @Html.ValidationMessageFor(m => m.DocumentTypeId, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <label>Phòng ban</label>
            @foreach (var dept in departments)
            {
                var isChecked = Model.DepartmentIds.Contains(dept.DepartmentId);
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="departmentIds" value="@dept.DepartmentId" id="dept_@dept.DepartmentId" @(isChecked ? "checked" : "")>
                    <label class="form-check-label" for="dept_@dept.DepartmentId">@dept.DepartmentName</label>
                </div>
            }
        </div>

        <div class="mb-3">
            <label>Tệp đính kèm</label>
            <input type="file" name="file" class="form-control" />
            @if (!string.IsNullOrEmpty(Model.FilePath))
            {
                <p>File hiện tại: <a href="@Url.Content(Model.FilePath)" target="_blank">Xem file</a></p>
            }
        </div>

        <button type="submit" class="btn btn-success">Lưu</button>
        <a href="@Url.Action("Index")" class="btn btn-secondary">Hủy</a>
    }
</div>
