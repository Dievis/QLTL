@model QLTL.ViewModels.DocumentVM.DocumentDetailVM
@{
    ViewBag.Title = "Chi tiết tài liệu";

    var viewableExts = new[] { ".pdf", ".png", ".jpg", ".jpeg" };
    var ext = System.IO.Path.GetExtension(Model.FileName).ToLower();
    var currentUserId = Session["UserId"] != null ? (int)Session["UserId"] : 0;

    var canApprove = false;
    var canEdit = false;

    if (Session["IsSuperAdmin"] is bool isSuperAdmin && isSuperAdmin)
    {
        canApprove = true;
        canEdit = true;
    }
    else if (Session["Permissions"] is List<string> perms)
    {
        canApprove = perms.Contains("Document.Approve", StringComparer.OrdinalIgnoreCase);
        canEdit = perms.Contains("Document.Edit", StringComparer.OrdinalIgnoreCase);
    }
}

@section styles {
    <link href="~/Content/detail.css" rel="stylesheet" />
}

<div class="container mt-4">
    <div class="card shadow detail-card">
        <div class="card-header detail-header d-flex align-items-center">
            <i class="bi bi-file-earmark-text-fill me-2"></i>
            <h4 class="mb-0">Chi tiết tài liệu</h4>
        </div>
        <div class="card-body">

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Tiêu đề:</div>
                <div class="col-sm-8">@Model.Title</div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Người tạo:</div>
                <div class="col-sm-8">@Model.UploaderName</div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Loại tài liệu:</div>
                <div class="col-sm-8">@Model.DocumentTypeName</div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Danh mục:</div>
                <div class="col-sm-8">@Model.CategoryName</div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Phòng ban:</div>
                <div class="col-sm-8">
                    @if (Model.Departments != null && Model.Departments.Any())
                    {
                        foreach (var dept in Model.Departments)
                        {
                            <span class="badge bg-secondary me-1">@dept.DepartmentName</span>
                        }
                    }
                    else
                    {
                        <span class="text-muted">Không có phòng ban</span>
                    }
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Nội dung:</div>
                <div class="col-sm-8">@Html.Raw(Model.Content)</div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Ngày tạo:</div>
                <div class="col-sm-8">@Model.CreatedAt.ToString("dd/MM/yyyy")</div>
            </div>

            <div class="row mb-3">
                <div class="col-sm-4 fw-bold">Trạng thái duyệt:</div>
                <div class="col-sm-8">
                    @if (string.IsNullOrEmpty(Model.ApprovalStatus) || Model.ApprovalStatus == "Pending")
                    {
                        <span class="badge bg-warning text-dark">Đang chờ duyệt</span>
                    }
                    else if (Model.ApprovalStatus == "Approved")
                    {
                        <span class="badge bg-success">Đã duyệt</span>
                    }
                    else if (Model.ApprovalStatus == "Rejected")
                    {
                        <span class="badge bg-danger">Từ chối</span>
                    }
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-sm-4 fw-bold">Trạng thái:</div>
                <div class="col-sm-8">
                    @if (Model.IsDeleted)
                    {
                        <span class="badge bg-danger">Đã xóa</span>
                    }
                    else
                    {
                        <span class="badge bg-success">Hoạt động</span>
                    }
                </div>
            </div>

            <div class="d-flex flex-wrap gap-2">
                @* Xem/Tải file *@
                @if (!string.IsNullOrEmpty(Model.FileName))
                {
                    if (viewableExts.Contains(ext))
                    {
                        <a href="@Url.Action("Download", "Document", new { id = Model.DocumentId })" target="_blank" class="btn btn-primary">
                            <i class="bi bi-eye"></i> Xem file
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Download", "Document", new { id = Model.DocumentId })" class="btn btn-success">
                            <i class="bi bi-download"></i> Tải file
                        </a>
                    }
                }

                @* Sửa tài liệu *@
                @if (canEdit)
                {
                    <a href="@Url.Action("Edit", new { id = Model.DocumentId })" class="btn btn-warning">
                        <i class="bi bi-pencil-square"></i> Sửa
                    </a>
                }

                @* Quay lại *@
                <a href="@(Request.UrlReferrer != null ? Request.UrlReferrer.ToString() : Url.Action("Index"))"
                   class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Quay lại
                </a>

                @* Duyệt / Từ chối / Hủy duyệt *@
                @if (canApprove && Model.ApprovalId.HasValue)
                {
                    if (Model.ApprovalStatus == "Pending")
                    {
                        <form method="post" action="@Url.Action("Approve", "Document")" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="approvalId" value="@Model.ApprovalId" />
                            <input type="hidden" name="approverId" value="@currentUserId" />
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-circle"></i> Approve
                            </button>
                        </form>

                        <form method="post" action="@Url.Action("Reject", "Document")" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="approvalId" value="@Model.ApprovalId" />
                            <input type="hidden" name="approverId" value="@currentUserId" />
                            <button type="submit" class="btn btn-danger">
                                <i class="bi bi-x-circle"></i> Reject
                            </button>
                        </form>
                    }
                    else if (Model.ApprovalStatus == "Approved" || Model.ApprovalStatus == "Rejected")
                    {
                        <form method="post" action="@Url.Action("CancelApproval", "Document")" class="d-inline">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="approvalId" value="@Model.ApprovalId" />
                            <input type="hidden" name="uploaderId" value="@currentUserId" />
                            <button type="submit" class="btn btn-warning">
                                <i class="bi bi-arrow-counterclockwise"></i> Hủy duyệt
                            </button>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>
