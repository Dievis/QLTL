@model QLTL.ViewModels.DocumentVM.DocumentDetailVM
@{
    ViewBag.Title = "Chi tiết tài liệu";
    var viewableExts = new[] { ".pdf", ".png", ".jpg", ".jpeg" };
    var ext = System.IO.Path.GetExtension(Model.FileName).ToLower();
    var currentUserId = Session["UserId"] != null ? (int)Session["UserId"] : 0;
    var canApprove = false;

    // SuperAdmin luôn có quyền
    if (Session["IsSuperAdmin"] is bool isSuperAdmin && isSuperAdmin)
    {
        canApprove = true;
    }
    else if (Session["Permissions"] is List<string> perms)
    {
        canApprove = perms.Contains("Document.Approve", StringComparer.OrdinalIgnoreCase);
    }

}

<div class="container mt-4">
    <h2 class="mb-4">Chi tiết tài liệu</h2>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title">@Model.Title</h5>
            <p class="card-text"><strong>Loại tài liệu:</strong> @Model.DocumentTypeName</p>
            <p class="card-text"><strong>Danh mục:</strong> @Model.CategoryName</p>
            <p class="card-text">
                <strong>Phòng ban:</strong>
                @if (Model.Departments != null && Model.Departments.Any())
                {
                    foreach (var dept in Model.Departments)
                    {
                        <span class="badge bg-secondary me-1">@dept.DepartmentName</span>
                    }
                }
                else
                {
                    <span class="text-muted">Không có phòng ban</span>
                }
            </p>
            <p class="card-text"><strong>Nội dung:</strong><br />@Html.Raw(Model.Content)</p>
            <p class="card-text"><strong>Ngày tạo:</strong> @Model.CreatedAt.ToString("dd/MM/yyyy")</p>
            <p class="card-text">
                <strong>Trạng thái duyệt:</strong>
                @if (string.IsNullOrEmpty(Model.ApprovalStatus) || Model.ApprovalStatus == "Pending")
                {
                    <span class="badge bg-warning text-dark">Đang chờ duyệt</span>
                }
                else if (Model.ApprovalStatus == "Approved")
                {
                    <span class="badge bg-success">Đã duyệt</span>
                }
                else if (Model.ApprovalStatus == "Rejected")
                {
                    <span class="badge bg-danger">Từ chối</span>
                }
            </p>

            <p class="card-text">
                <strong>Trạng thái:</strong>
                @if (Model.IsDeleted)
                {
                    <span class="badge bg-danger">Đã xóa</span>
                }
                else
                {
                    <span class="badge bg-success">Hoạt động</span>
                }
            </p>

            @if (!string.IsNullOrEmpty(Model.FileName))
            {
                if (viewableExts.Contains(ext))
                {
                    <a href="@Url.Action("Download", "Document", new { id = Model.DocumentId })" target="_blank" class="btn btn-primary me-2">
                        <i class="bi bi-eye"></i> Xem file
                    </a>
                }
                else
                {
                    <a href="@Url.Action("Download", "Document", new { id = Model.DocumentId })" class="btn btn-success me-2">
                        <i class="bi bi-download"></i> Tải file
                    </a>
                }
            }

            <a href="@Url.Action("Edit", new { id = Model.DocumentId })" class="btn btn-warning me-2">
                <i class="bi bi-pencil-square"></i> Sửa
            </a>
            <a href="@Url.Action("Index")" class="btn btn-secondary me-2">
                <i class="bi bi-arrow-left"></i> Quay lại
            </a>

            @* Nút Approve/Reject chỉ hiện nếu user có quyền *@
            @if (canApprove && Model.ApprovalId.HasValue)
            {
                <form method="post" action="@Url.Action("Approve", "Document")" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="approvalId" value="@Model.ApprovalId" />
                    <input type="hidden" name="approverId" value="@currentUserId" />
                    <button type="submit" class="btn btn-success me-2">
                        <i class="bi bi-check-circle"></i> Approve
                    </button>
                </form>

                <form method="post" action="@Url.Action("Reject", "Document")" class="d-inline">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="approvalId" value="@Model.ApprovalId" />
                    <input type="hidden" name="approverId" value="@currentUserId" />
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-x-circle"></i> Reject
                    </button>
                </form>
            }

        </div>
    </div>
</div>
