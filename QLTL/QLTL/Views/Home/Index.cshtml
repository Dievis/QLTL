@model QLTL.ViewModels.DocumentVM.DocumentIndexVM
@{
    ViewBag.Title = "Danh sách tài liệu";
    var currentUserId = Session["UserId"] != null ? (int)Session["UserId"] : 0;

    var canView = false;
    var canDelete = false;
    var canEdit = false;
    var canCreate = false;

    if (Session["IsSuperAdmin"] is bool isSuperAdmin && isSuperAdmin)
    {
        canView = canDelete = canEdit = canCreate = true;
    }
    else if (Session["Permissions"] is List<string> perms)
    {
        canView = perms.Contains("Document.View", StringComparer.OrdinalIgnoreCase)
                  || perms.Contains("View", StringComparer.OrdinalIgnoreCase);
        canDelete = perms.Contains("Document.Delete", StringComparer.OrdinalIgnoreCase);
        canEdit = perms.Contains("Document.Edit", StringComparer.OrdinalIgnoreCase);
        canCreate = perms.Contains("Document.Create", StringComparer.OrdinalIgnoreCase);
    }
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">
            <i class="bi bi-journals"></i> Danh sách tài liệu
        </h2>

        @if (canCreate)
        {
            <a href="@Url.Action("Create", "Document")" class="btn btn-success shadow-sm">
                <i class="bi bi-upload"></i> Upload tài liệu
            </a>
        }
    </div>

    <div class="row g-4">
        @foreach (var item in Model.Items)
        {
            <div class="col-md-4">
                <div class="card h-100 shadow-sm border-0" data-docid="@item.DocumentId">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title fw-bold text-truncate" title="@item.Title">
                            <i class="bi bi-file-earmark-text"></i> @item.Title
                        </h5>

                        <p class="mb-1 text-muted">
                            <i class="bi bi-person"></i> Người tạo: <span class="fw-semibold">@item.UploaderName</span>
                        </p>
                        <p class="mb-1 text-muted">
                            <i class="bi bi-calendar3"></i> Ngày tạo: @item.CreatedAt.ToString("dd/MM/yyyy")
                        </p>

                        <div class="mb-3">
                            @if (item.IsDeleted)
                            {
                                <span class="badge bg-danger"><i class="bi bi-x-circle"></i> Đã xóa</span>
                            }
                            else
                            {
                                <span class="badge bg-success"><i class="bi bi-check-circle"></i> Hoạt động</span>
                            }
                        </div>

                        <div class="mt-auto d-flex justify-content-between align-items-center">
                            @if (canView)
                            {
                                <a href="@Url.Action("Details", "Document", new { id = item.DocumentId })"
                                   class="btn btn-sm btn-primary shadow-sm">
                                    <i class="bi bi-eye"></i> Xem
                                </a>
                            }

                            <button class="btn btn-sm btn-outline-danger favorite-btn shadow-sm"
                                    data-userid="@currentUserId">
                                <i class="bi bi-heart"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.favorite-btn').each(function () {
                var btn = $(this);
                var docId = btn.closest('.card').data('docid');
                var userId = btn.data('userid');

                // Kiểm tra trạng thái ban đầu
                $.get('@Url.Action("IsFavorite", "Document")',
                    { documentId: docId, userId: userId },
                    function (res) {
                        if (res.isFavorite) {
                            btn.addClass('btn-danger').removeClass('btn-outline-danger');
                            btn.html('<i class="bi bi-heart-fill"></i>');
                        }
                    });
            });

            $('.favorite-btn').click(function () {
                var btn = $(this);
                var docId = btn.closest('.card').data('docid');
                var userId = btn.data('userid');
                var isFav = btn.hasClass('btn-danger');

                if (isFav) {
                    $.post('@Url.Action("RemoveFavorite", "Document")',
                        { documentId: docId, userId: userId },
                        function (res) {
                            if (res.success) {
                                btn.removeClass('btn-danger').addClass('btn-outline-danger');
                                btn.html('<i class="bi bi-heart"></i>');
                            } else {
                                alert(res.message);
                            }
                        });
                } else {
                    $.post('@Url.Action("AddFavorite", "Document")',
                        { documentId: docId, userId: userId },
                        function (res) {
                            if (res.success) {
                                btn.addClass('btn-danger').removeClass('btn-outline-danger');
                                btn.html('<i class="bi bi-heart-fill"></i>');
                            } else {
                                alert(res.message);
                            }
                        });
                }
            });
        });
    </script>
}
